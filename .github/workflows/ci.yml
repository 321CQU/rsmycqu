name: CI

on:
  pull_request:
    branches: [master, main]
    types: [opened, synchronize, reopened]
    paths:
      - "src/**"
      - "Cargo.toml"
      - "Cargo.lock"
      - ".github/workflows/ci.yml"

env:
  CARGO_TERM_COLOR: always

jobs:
  check:
    name: Check
    runs-on: ubuntu-latest
    if: ${{ !startsWith(github.head_ref, 'release-plz') }}
    steps:
      - name: Checkout repository
        uses: actions/checkout@v5

      - name: Install Rust toolchain
        uses: dtolnay/rust-toolchain@stable

      - name: Rust Cache
        uses: Swatinem/rust-cache@v2

      - name: Run cargo check
        run: cargo check --all-targets --all-features

  build:
    name: Build
    runs-on: ubuntu-latest
    needs: check
    if: ${{ !startsWith(github.head_ref, 'release-plz') }}
    steps:
      - name: Checkout repository
        uses: actions/checkout@v5

      - name: Install Rust toolchain
        uses: dtolnay/rust-toolchain@stable

      - name: Rust Cache
        uses: Swatinem/rust-cache@v2

      - name: Run cargo build
        run: cargo build --all-targets --all-features

  test:
    name: Test
    runs-on: ubuntu-latest
    needs: build
    if: ${{ !startsWith(github.head_ref, 'release-plz') }}
    steps:
      - name: Checkout repository
        uses: actions/checkout@v5

      - name: Install Rust toolchain
        uses: dtolnay/rust-toolchain@stable

      - name: Rust Cache
        uses: Swatinem/rust-cache@v2

      - name: Run cargo test
        run: cargo test --all-features

  clippy:
    name: Clippy
    runs-on: ubuntu-latest
    if: ${{ !startsWith(github.head_ref, 'release-plz') }}
    steps:
      - name: Checkout repository
        uses: actions/checkout@v5

      - name: Install Rust toolchain
        uses: dtolnay/rust-toolchain@stable
        with:
          components: clippy

      - name: Rust Cache
        uses: Swatinem/rust-cache@v2

      - name: Run clippy
        run: cargo clippy --all-targets --all-features -- -D warnings

  fmt:
    name: Format
    runs-on: ubuntu-latest
    if: ${{ !startsWith(github.head_ref, 'release-plz') }}
    steps:
      - name: Checkout repository
        uses: actions/checkout@v5

      - name: Install Rust nightly toolchain
        uses: dtolnay/rust-toolchain@nightly
        with:
          components: rustfmt

      - name: Check formatting
        run: cargo +nightly fmt -- --check
